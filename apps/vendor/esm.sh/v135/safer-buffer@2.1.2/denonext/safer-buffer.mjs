/* esm.sh - esbuild bundle(safer-buffer@2.1.2) denonext production */
import __Process$ from "node:process";
import * as __0$ from "node:buffer";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"buffer":return e(__0$);default:throw new Error("module \""+n+"\" not found");}};
var w=Object.create;var g=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,_=Object.prototype.hasOwnProperty;var k=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var B=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),L=(e,r)=>{for(var t in r)g(e,t,{get:r[t],enumerable:!0})},c=(e,r,t,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of T(r))!_.call(e,s)&&s!==t&&g(e,s,{get:()=>r[s],enumerable:!(i=x(r,s))||i.enumerable});return e},a=(e,r,t)=>(c(e,r,"default"),t&&c(t,r,"default")),m=(e,r,t)=>(t=e!=null?w(S(e)):{},c(r||!e||!e.__esModule?g(t,"default",{value:e,enumerable:!0}):t,e));var h=B((R,l)=>{"use strict";var y=k("buffer"),u=y.Buffer,f={},n;for(n in y)y.hasOwnProperty(n)&&(n==="SlowBuffer"||n==="Buffer"||(f[n]=y[n]));var p=f.Buffer={};for(n in u)u.hasOwnProperty(n)&&(n==="allocUnsafe"||n==="allocUnsafeSlow"||(p[n]=u[n]));f.Buffer.prototype=u.prototype;(!p.from||p.from===Uint8Array.from)&&(p.from=function(e,r,t){if(typeof e=="number")throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&typeof e.length>"u")throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return u(e,r,t)});p.alloc||(p.alloc=function(e,r,t){if(typeof e!="number")throw new TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value "'+e+'" is invalid for option "size"');var i=u(e);return!r||r.length===0?i.fill(0):typeof t=="string"?i.fill(r,t):i.fill(r),i});if(!f.kStringMaxLength)try{f.kStringMaxLength=__Process$.binding("buffer").kStringMaxLength}catch{}f.constants||(f.constants={MAX_LENGTH:f.kMaxLength},f.kStringMaxLength&&(f.constants.MAX_STRING_LENGTH=f.kStringMaxLength));l.exports=f});var o={};L(o,{constants:()=>M,default:()=>A});var d=m(h());a(o,m(h()));var{constants:M}=d,{default:b,...v}=d,A=b!==void 0?b:v;export{M as constants,A as default};
//# sourceMappingURL=safer-buffer.mjs.map