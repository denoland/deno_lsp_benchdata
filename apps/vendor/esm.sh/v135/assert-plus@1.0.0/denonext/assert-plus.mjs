/* esm.sh - esbuild bundle(assert-plus@1.0.0) denonext production */
import __Process$ from "node:process";
import { Buffer as __Buffer$ } from "node:buffer";
import * as __0$ from "node:assert";
import * as __1$ from "node:stream";
import * as __2$ from "node:util";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"assert":return e(__0$);case"stream":return e(__1$);case"util":return e(__2$);default:throw new Error("module \""+n+"\" not found");}};
var O=Object.create;var E=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var B=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(n,t)=>(typeof require<"u"?require:n)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var q=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),S=(e,n)=>{for(var t in n)E(e,t,{get:n[t],enumerable:!0})},A=(e,n,t,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let o of k(n))!j.call(e,o)&&o!==t&&E(e,o,{get:()=>n[o],enumerable:!(r=U(n,o))||r.enumerable});return e},p=(e,n,t)=>(A(e,n,"default"),t&&A(t,n,"default")),N=(e,n,t)=>(t=e!=null?O(B(e)):{},A(n||!e||!e.__esModule?E(t,"default",{value:e,enumerable:!0}):t,e));var x=q((X,D)=>{var v=_("assert"),G=_("stream").Stream,w=_("util"),C=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;function d(e){return e.charAt(0).toUpperCase()+e.slice(1)}function u(e,n,t,r,o){throw new v.AssertionError({message:w.format("%s (%s) is required",e,n),actual:o===void 0?typeof r:o(r),expected:n,operator:t||"===",stackStartFunction:u.caller})}function m(e){return Object.prototype.toString.call(e).slice(8,-1)}function l(){}var h={bool:{check:function(e){return typeof e=="boolean"}},func:{check:function(e){return typeof e=="function"}},string:{check:function(e){return typeof e=="string"}},object:{check:function(e){return typeof e=="object"&&e!==null}},number:{check:function(e){return typeof e=="number"&&!isNaN(e)}},finite:{check:function(e){return typeof e=="number"&&!isNaN(e)&&isFinite(e)}},buffer:{check:function(e){return __Buffer$.isBuffer(e)},operator:"Buffer.isBuffer"},array:{check:function(e){return Array.isArray(e)},operator:"Array.isArray"},stream:{check:function(e){return e instanceof G},operator:"instanceof",actual:m},date:{check:function(e){return e instanceof Date},operator:"instanceof",actual:m},regexp:{check:function(e){return e instanceof RegExp},operator:"instanceof",actual:m},uuid:{check:function(e){return typeof e=="string"&&C.test(e)},operator:"isUUID"}};function b(e){var n=Object.keys(h),t;return __Process$.env.NODE_NDEBUG?t=l:t=function(r,o){r||u(o,"true",r)},n.forEach(function(r){if(e){t[r]=l;return}var o=h[r];t[r]=function(c,i){o.check(c)||u(i,r,o.operator,c,o.actual)}}),n.forEach(function(r){var o="optional"+d(r);if(e){t[o]=l;return}var c=h[r];t[o]=function(i,f){i!=null&&(c.check(i)||u(f,r,c.operator,i,c.actual))}}),n.forEach(function(r){var o="arrayOf"+d(r);if(e){t[o]=l;return}var c=h[r],i="["+r+"]";t[o]=function(f,y){Array.isArray(f)||u(y,i,c.operator,f,c.actual);var a;for(a=0;a<f.length;a++)c.check(f[a])||u(y,i,c.operator,f,c.actual)}}),n.forEach(function(r){var o="optionalArrayOf"+d(r);if(e){t[o]=l;return}var c=h[r],i="["+r+"]";t[o]=function(f,y){if(f!=null){Array.isArray(f)||u(y,i,c.operator,f,c.actual);var a;for(a=0;a<f.length;a++)c.check(f[a])||u(y,i,c.operator,f,c.actual)}}}),Object.keys(v).forEach(function(r){if(r==="AssertionError"){t[r]=v[r];return}if(e){t[r]=l;return}t[r]=v[r]}),t._setExports=b,t}D.exports=b(__Process$.env.NODE_NDEBUG)});var s={};S(s,{default:()=>z});var I=N(x());p(s,N(x()));var{default:F,...R}=I,z=F!==void 0?F:R;export{z as default};
//# sourceMappingURL=assert-plus.mjs.map