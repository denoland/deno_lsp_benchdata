/* esm.sh - esbuild bundle(utf-8-validate@6.0.3) denonext production */
import * as __0$ from "/v135/node-gyp-build@4.6.1/denonext/node-gyp-build.mjs";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"node-gyp-build":return e(__0$);default:throw new Error("module \""+n+"\" not found");}};
var h=Object.create;var c=Object.defineProperty;var q=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var F=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,x)=>(typeof require<"u"?require:r)[x]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var d=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),T=(e,r)=>{for(var x in r)c(e,x,{get:r[x],enumerable:!0})},l=(e,r,x,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of g(r))!y.call(e,i)&&i!==x&&c(e,i,{get:()=>r[i],enumerable:!(o=q(r,i))||o.enumerable});return e},s=(e,r,x)=>(l(e,r,"default"),x&&l(x,r,"default")),_=(e,r,x)=>(x=e!=null?h(w(e)):{},l(r||!e||!e.__esModule?c(x,"default",{value:e,enumerable:!0}):x,e));var p=d((z,f)=>{"use strict";function U(e){let r=e.length,x=0;for(;x<r;)if(!(e[x]&128))x++;else if((e[x]&224)===192){if(x+1===r||(e[x+1]&192)!==128||(e[x]&254)===192)return!1;x+=2}else if((e[x]&240)===224){if(x+2>=r||(e[x+1]&192)!==128||(e[x+2]&192)!==128||e[x]===224&&(e[x+1]&224)===128||e[x]===237&&(e[x+1]&224)===160)return!1;x+=3}else if((e[x]&248)===240){if(x+3>=r||(e[x+1]&192)!==128||(e[x+2]&192)!==128||(e[x+3]&192)!==128||e[x]===240&&(e[x+1]&240)===128||e[x]===244&&e[x+1]>143||e[x]>244)return!1;x+=4}else return!1;return!0}f.exports=U});var a=d((A,n)=>{"use strict";try{n.exports=F("node-gyp-build")("/_virtual/esm.sh/v135/utf-8-validate@6.0.3/denonext")}catch{n.exports=p()}});var t={};T(t,{default:()=>k});var V=_(a());s(t,_(a()));var{default:m,...j}=V,k=m!==void 0?m:j;export{k as default};
//# sourceMappingURL=utf-8-validate.mjs.map