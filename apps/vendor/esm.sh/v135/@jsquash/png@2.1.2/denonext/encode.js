/* esm.sh - esbuild bundle(@jsquash/png@2.1.2/encode) denonext production */
var r,h=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});h.decode();var u=null;function g(){return(u===null||u.buffer!==r.memory.buffer)&&(u=new Uint8Array(r.memory.buffer)),u}function M(e,n){return h.decode(g().subarray(e,e+n))}var l=null;function U(){return(l===null||l.buffer!==r.memory.buffer)&&(l=new Uint8ClampedArray(r.memory.buffer)),l}function I(e,n){return U().subarray(e/1,e/1+n)}var i=new Array(32).fill(void 0);i.push(void 0,null,!0,!1);var m=i.length;function R(e){m===i.length&&i.push(i.length+1);let n=m;return m=i[n],i[n]=e,n}var _=0;function T(e,n){let t=n(e.length*1);return g().set(e,t/1),_=e.length,t}var d=null;function y(){return(d===null||d.buffer!==r.memory.buffer)&&(d=new Int32Array(r.memory.buffer)),d}function x(e,n){return g().subarray(e/1,e/1+n)}function p(e,n,t){try{let c=r.__wbindgen_add_to_stack_pointer(-16);var a=T(e,r.__wbindgen_malloc),s=_;r.encode(c,a,s,n,t);var o=y()[c/4+0],f=y()[c/4+1],b=x(o,f).slice();return r.__wbindgen_free(o,f*1),b}finally{r.__wbindgen_add_to_stack_pointer(16)}}async function C(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(a){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",a);else throw a}let t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{let t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}async function A(e){typeof e>"u"&&(e=new URL("squoosh_png_bg.wasm",import.meta.url));let n={};n.wbg={},n.wbg.__wbg_newwithownedu8clampedarrayandsh_787b2db8ea6bfd62=function(s,o,f,b){var c=I(s,o).slice();r.__wbindgen_free(s,o*1);var W=new ImageData(c,f>>>0,b>>>0);return R(W)},n.wbg.__wbindgen_throw=function(s,o){throw new Error(M(s,o))},(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));let{instance:t,module:a}=await C(await e,n);return r=t.exports,A.__wbindgen_wasm_module=a,r}var v=A,E=globalThis.caches&&globalThis.caches.default!==void 0;E&&(globalThis.ImageData||(globalThis.ImageData=class{constructor(n,t,a){this.data=n,this.width=t,this.height=a}}));var w;async function O(e){return w||(w=v(e)),w}async function D(e){await O();let n=await p(e.data,e.width,e.height);if(!n)throw new Error("Encoding error.");return n}export{D as default,O as init};
//# sourceMappingURL=encode.js.map