/* esm.sh - esbuild bundle(@jsquash/resize@1.0.1) denonext production */
function x(e,n,t,r){let s=e/n,a=t/r;if(a>s){let l=e/a,m=(n-l)/2;return{sw:e,sh:l,sx:0,sy:m}}let i=n*a,f=(e-i)/2;return{sh:n,sw:i,sx:f,sy:0}}var o,u=null;function k(){return(u===null||u.buffer!==o.memory.buffer)&&(u=new Uint8Array(o.memory.buffer)),u}var R=0;function T(e,n){let t=n(e.length*1);return k().set(e,t/1),R=e.length,t}var y=null;function M(){return(y===null||y.buffer!==o.memory.buffer)&&(y=new Int32Array(o.memory.buffer)),y}var h=null;function N(){return(h===null||h.buffer!==o.memory.buffer)&&(h=new Uint8ClampedArray(o.memory.buffer)),h}function B(e,n){return N().subarray(e/1,e/1+n)}function U(e,n,t,r,s,a,i,f){try{let g=o.__wbindgen_add_to_stack_pointer(-16);var l=T(e,o.__wbindgen_malloc),m=R;o.resize(g,l,m,n,t,r,s,a,i,f);var _=M()[g/4+0],A=M()[g/4+1],E=B(_,A).slice();return o.__wbindgen_free(_,A*1),E}finally{o.__wbindgen_add_to_stack_pointer(16)}}async function F(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}let t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{let t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}async function W(e){typeof e>"u"&&(e=new URL("squoosh_resize_bg.wasm",import.meta.url));let n={};(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));let{instance:t,module:r}=await F(await e,n);return o=t.exports,W.__wbindgen_wasm_module=r,o}var z=W;var c,w=null;function I(){return(w===null||w.buffer!==c.memory.buffer)&&(w=new Uint32Array(c.memory.buffer)),w}var v=0;function H(e,n){let t=n(e.length*4);return I().set(e,t/4),v=e.length,t}var b=null;function q(){return(b===null||b.buffer!==c.memory.buffer)&&(b=new Int32Array(c.memory.buffer)),b}function V(e,n){return I().subarray(e/4,e/4+n)}function C(e,n,t,r){try{let m=c.__wbindgen_add_to_stack_pointer(-16);var s=H(e,c.__wbindgen_malloc),a=v;c.resize(m,s,a,n,t,r);var i=q()[m/4+0],f=q()[m/4+1],l=V(i,f).slice();return c.__wbindgen_free(i,f*4),l}finally{c.__wbindgen_add_to_stack_pointer(16)}}async function D(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}let t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{let t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}async function S(e){typeof e>"u"&&(e=new URL("squooshhqx_bg.wasm",import.meta.url));let n={};(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));let{instance:t,module:r}=await D(await e,n);return c=t.exports,S.__wbindgen_wasm_module=r,c}var L=S;var O={width:1,height:1,method:"lanczos3",fitMethod:"stretch",premultiply:!0,linearRGB:!0};var d,p;function G(e){return d||(d=z(e)),d}function P(e){return p||(p=L(e)),p}function X(e){return e.method==="hqx"}function j(e,n,t,r,s){let a=new Uint32Array(e.data.buffer);for(let i=0;i<s;i+=1){let f=(i+t)*e.width+n;a.copyWithin(i*r,f,f+r)}return new ImageData(new Uint8ClampedArray(a.buffer.slice(0,r*s*4)),r,s)}function J(e,{min:n=Number.MIN_VALUE,max:t=Number.MAX_VALUE}){return Math.min(Math.max(e,n),t)}var K=["triangle","catrom","mitchell","lanczos3"];async function Q(e,n){await P();let t=n.width/e.width,r=n.height/e.height,s=Math.max(t,r),a=J(Math.ceil(s),{min:1,max:4});if(a===1)return e;let i=C(new Uint32Array(e.data.buffer),e.width,e.height,a);return new ImageData(new Uint8ClampedArray(i.buffer),e.width*a,e.height*a)}async function Y(e,n){let t={...O,...n},r=e;if(G(),X(t)&&(r=await Q(r,t),t={...t,method:"catrom"}),await d,t.fitMethod==="contain"){let{sx:a,sy:i,sw:f,sh:l}=x(e.width,e.height,t.width,t.height);r=j(r,Math.round(a),Math.round(i),Math.round(f),Math.round(l))}let s=U(new Uint8Array(r.data.buffer),r.width,r.height,t.width,t.height,K.indexOf(t.method),t.premultiply,t.linearRGB);return new ImageData(new Uint8ClampedArray(s.buffer),t.width,t.height)}export{Y as default,P as initHqx,G as initResize};
//# sourceMappingURL=resize.mjs.map