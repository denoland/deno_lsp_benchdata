/* esm.sh - esbuild bundle(@opentelemetry/api-logs@0.43.0) denonext production */
var __global$ = globalThis || (typeof window !== "undefined" ? window : self);
var O;(function(o){o[o.UNSPECIFIED=0]="UNSPECIFIED",o[o.TRACE=1]="TRACE",o[o.TRACE2=2]="TRACE2",o[o.TRACE3=3]="TRACE3",o[o.TRACE4=4]="TRACE4",o[o.DEBUG=5]="DEBUG",o[o.DEBUG2=6]="DEBUG2",o[o.DEBUG3=7]="DEBUG3",o[o.DEBUG4=8]="DEBUG4",o[o.INFO=9]="INFO",o[o.INFO2=10]="INFO2",o[o.INFO3=11]="INFO3",o[o.INFO4=12]="INFO4",o[o.WARN=13]="WARN",o[o.WARN2=14]="WARN2",o[o.WARN3=15]="WARN3",o[o.WARN4=16]="WARN4",o[o.ERROR=17]="ERROR",o[o.ERROR2=18]="ERROR2",o[o.ERROR3=19]="ERROR3",o[o.ERROR4=20]="ERROR4",o[o.FATAL=21]="FATAL",o[o.FATAL2=22]="FATAL2",o[o.FATAL3=23]="FATAL3",o[o.FATAL4=24]="FATAL4"})(O||(O={}));var p=function(){function o(){}return o.prototype.emit=function(n){},o}();var c=new p;var I=function(){function o(){}return o.prototype.getLogger=function(n,R,g){return new p},o}();var E=new I;var L=typeof globalThis=="object"?globalThis:typeof self=="object"?self:typeof window=="object"?window:typeof __global$=="object"?__global$:{};var A=Symbol.for("io.opentelemetry.js.api.logs"),t=L;function a(o,n,R){return function(g){return g===o?n:R}}var f=1;var l=function(){function o(){}return o.getInstance=function(){return this._instance||(this._instance=new o),this._instance},o.prototype.setGlobalLoggerProvider=function(n){return t[A]?this.getLoggerProvider():(t[A]=a(f,n,E),n)},o.prototype.getLoggerProvider=function(){var n,R;return(R=(n=t[A])===null||n===void 0?void 0:n.call(t,f))!==null&&R!==void 0?R:E},o.prototype.getLogger=function(n,R,g){return this.getLoggerProvider().getLogger(n,R,g)},o.prototype.disable=function(){delete t[A]},o}();var U=l.getInstance();export{c as NOOP_LOGGER,E as NOOP_LOGGER_PROVIDER,p as NoopLogger,I as NoopLoggerProvider,O as SeverityNumber,U as logs};
//# sourceMappingURL=api-logs.mjs.map