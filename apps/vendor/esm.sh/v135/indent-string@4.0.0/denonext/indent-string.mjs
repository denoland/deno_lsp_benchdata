/* esm.sh - esbuild bundle(indent-string@4.0.0) denonext production */
var l=Object.create;var i=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var c=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var x=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var r in e)i(t,r,{get:e[r],enumerable:!0})},d=(t,e,r,p)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of E(e))!g.call(t,o)&&o!==r&&i(t,o,{get:()=>e[o],enumerable:!(p=s(e,o))||p.enumerable});return t},f=(t,e,r)=>(d(t,e,"default"),r&&d(r,e,"default")),y=(t,e,r)=>(r=t!=null?l(c(t)):{},d(e||!t||!t.__esModule?i(r,"default",{value:t,enumerable:!0}):r,t));var u=x((T,a)=>{"use strict";a.exports=(t,e=1,r)=>{if(r={indent:" ",includeEmptyLines:!1,...r},typeof t!="string")throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof t}\``);if(typeof e!="number")throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof e}\``);if(typeof r.indent!="string")throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``);if(e===0)return t;let p=r.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return t.replace(p,r.indent.repeat(e))}});var n={};w(n,{default:()=>$});var _=y(u());f(n,y(u()));var{default:m,...b}=_,$=m!==void 0?m:b;export{$ as default};
//# sourceMappingURL=indent-string.mjs.map