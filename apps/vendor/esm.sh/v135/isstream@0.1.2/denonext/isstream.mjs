/* esm.sh - esbuild bundle(isstream@0.1.2) denonext production */
import * as __0$ from "node:stream";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"stream":return e(__0$);default:throw new Error("module \""+n+"\" not found");}};
var b=Object.create;var u=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var W=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var w=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),q=(e,t)=>{for(var r in t)u(e,r,{get:t[r],enumerable:!0})},s=(e,t,r,p)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of S(t))!R.call(e,n)&&n!==r&&u(e,n,{get:()=>t[n],enumerable:!(p=y(t,n))||p.enumerable});return e},a=(e,t,r)=>(s(e,t,"default"),r&&s(r,t,"default")),c=(e,t,r)=>(r=e!=null?b(D(e)):{},s(t||!e||!e.__esModule?u(r,"default",{value:e,enumerable:!0}):r,e));var l=w((E,o)=>{var v=W("stream");function f(e){return e instanceof v.Stream}function d(e){return f(e)&&typeof e._read=="function"&&typeof e._readableState=="object"}function x(e){return f(e)&&typeof e._write=="function"&&typeof e._writableState=="object"}function g(e){return d(e)&&x(e)}o.exports=f;o.exports.isReadable=d;o.exports.isWritable=x;o.exports.isDuplex=g});var i={};q(i,{default:()=>B,isDuplex:()=>z,isReadable:()=>h,isWritable:()=>k});var m=c(l());a(i,c(l()));var{isReadable:h,isWritable:k,isDuplex:z}=m,{default:_,...A}=m,B=_!==void 0?_:A;export{B as default,z as isDuplex,h as isReadable,k as isWritable};
//# sourceMappingURL=isstream.mjs.map