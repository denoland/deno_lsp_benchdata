/* esm.sh - esbuild bundle(oauth-sign@0.9.0) denonext production */
import * as __0$ from "node:crypto";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"crypto":return e(__0$);default:throw new Error("module \""+n+"\" not found");}};
var x=Object.create;var m=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var B=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var R=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,n)=>(typeof require<"u"?require:r)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var T=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),I=(e,r)=>{for(var n in r)m(e,n,{get:r[n],enumerable:!0})},g=(e,r,n,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let a of w(r))!E.call(e,a)&&a!==n&&m(e,a,{get:()=>r[a],enumerable:!(s=C(r,a))||s.enumerable});return e},p=(e,r,n)=>(g(e,r,"default"),n&&g(n,r,"default")),v=(e,r,n)=>(n=e!=null?x(B(e)):{},g(r||!e||!e.__esModule?m(n,"default",{value:e,enumerable:!0}):n,e));var l=T(o=>{var A=R("crypto");function k(e,r,n){return A.createHmac(n,e).update(r).digest("base64")}function U(e,r){return A.createSign("RSA-SHA1").update(r).sign(e,"base64")}function c(e){return encodeURIComponent(e).replace(/!/g,"%21").replace(/\*/g,"%2A").replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/'/g,"%27")}function q(e){var r,n,s=[];for(r in e)if(n=e[r],Array.isArray(n))for(var a=0;a<n.length;a++)s.push([r,n[a]]);else if(typeof n=="object")for(var t in n)s.push([r+"["+t+"]",n[t]]);else s.push([r,n]);return s}function d(e,r){return e>r?1:e<r?-1:0}function f(e,r,n){var s=q(n).map(function(t){return[c(t[0]),c(t[1]||"")]}).sort(function(t,i){return d(t[0],i[0])||d(t[1],i[1])}).map(function(t){return t.join("=")}).join("&"),a=[c(e?e.toUpperCase():"GET"),c(r),c(s)].join("&");return a}function y(e,r,n,s,a){var t=f(e,r,n),i=[s||"",a||""].map(c).join("&");return k(i,t,"sha1")}function _(e,r,n,s,a){var t=f(e,r,n),i=[s||"",a||""].map(c).join("&");return k(i,t,"sha256")}function b(e,r,n,s,a){var t=f(e,r,n),i=s||"";return U(i,t)}function S(e,r){var n=[e||"",r||""].map(c).join("&");return n}function z(e,r,n,s,a,t){var i,h=1;switch(e){case"RSA-SHA1":i=b;break;case"HMAC-SHA1":i=y;break;case"HMAC-SHA256":i=_;break;case"PLAINTEXT":i=S,h=4;break;default:throw new Error("Signature method not supported: "+e)}return i.apply(null,[].slice.call(arguments,h))}o.hmacsign=y;o.hmacsign256=_;o.rsasign=b;o.plaintext=S;o.sign=z;o.rfc3986=c;o.generateBase=f});var u={};I(u,{default:()=>J,generateBase:()=>D,hmacsign:()=>G,hmacsign256:()=>L,plaintext:()=>N,rfc3986:()=>X,rsasign:()=>M,sign:()=>P});var j=v(l());p(u,v(l()));var{hmacsign:G,hmacsign256:L,rsasign:M,plaintext:N,sign:P,rfc3986:X,generateBase:D}=j,{default:H,...F}=j,J=H!==void 0?H:F;export{J as default,D as generateBase,G as hmacsign,L as hmacsign256,N as plaintext,X as rfc3986,M as rsasign,P as sign};
//# sourceMappingURL=oauth-sign.mjs.map