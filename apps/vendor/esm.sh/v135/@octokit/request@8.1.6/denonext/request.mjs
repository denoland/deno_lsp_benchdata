/* esm.sh - esbuild bundle(@octokit/request@8.1.6) denonext production */
import{endpoint as b}from"/v135/@octokit/endpoint@9.0.2/denonext/endpoint.mjs";import{getUserAgent as w}from"/v135/universal-user-agent@6.0.1/denonext/universal-user-agent.mjs";var m="8.1.6";function y(t){if(typeof t!="object"||t===null||Object.prototype.toString.call(t)!=="[object Object]")return!1;let c=Object.getPrototypeOf(t);if(c===null)return!0;let r=Object.prototype.hasOwnProperty.call(c,"constructor")&&c.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(t)}import{RequestError as u}from"/v135/@octokit/request-error@5.0.1/denonext/request-error.mjs";function g(t){return t.arrayBuffer()}function d(t){let c=t.request&&t.request.log?t.request.log:console,r=t.request?.parseSuccessResponseBody!==!1;(y(t.body)||Array.isArray(t.body))&&(t.body=JSON.stringify(t.body));let s={},o,i,{fetch:a}=globalThis;if(t.request?.fetch&&(a=t.request.fetch),!a)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return a(t.url,{method:t.method,body:t.body,headers:t.headers,signal:t.request?.signal,...t.body&&{duplex:"half"}}).then(async e=>{i=e.url,o=e.status;for(let n of e.headers)s[n[0]]=n[1];if("deprecation"in s){let n=s.link&&s.link.match(/<([^>]+)>; rel="deprecation"/),f=n&&n.pop();c.warn(`[@octokit/request] "${t.method} ${t.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${f?`. See ${f}`:""}`)}if(!(o===204||o===205)){if(t.method==="HEAD"){if(o<400)return;throw new u(e.statusText,o,{response:{url:i,status:o,headers:s,data:void 0},request:t})}if(o===304)throw new u("Not modified",o,{response:{url:i,status:o,headers:s,data:await h(e)},request:t});if(o>=400){let n=await h(e);throw new u(p(n),o,{response:{url:i,status:o,headers:s,data:n},request:t})}return r?await h(e):e.body}}).then(e=>({status:o,url:i,headers:s,data:e})).catch(e=>{if(e instanceof u)throw e;if(e.name==="AbortError")throw e;let n=e.message;throw e.name==="TypeError"&&"cause"in e&&(e.cause instanceof Error?n=e.cause.message:typeof e.cause=="string"&&(n=e.cause)),new u(n,500,{request:t})})}async function h(t){let c=t.headers.get("content-type");return/application\/json/.test(c)?t.json().catch(()=>t.text()).catch(()=>""):!c||/^text\/|charset=utf-8$/.test(c)?t.text():g(t)}function p(t){return typeof t=="string"?t:"message"in t?Array.isArray(t.errors)?`${t.message}: ${t.errors.map(JSON.stringify).join(", ")}`:t.message:`Unknown error: ${JSON.stringify(t)}`}function l(t,c){let r=t.defaults(c);return Object.assign(function(o,i){let a=r.merge(o,i);if(!a.request||!a.request.hook)return d(r.parse(a));let e=(n,f)=>d(r.parse(r.merge(n,f)));return Object.assign(e,{endpoint:r,defaults:l.bind(null,r)}),a.request.hook(e,a)},{endpoint:r,defaults:l.bind(null,r)})}var I=l(b,{headers:{"user-agent":`octokit-request.js/${m} ${w()}`}});export{I as request};
//# sourceMappingURL=request.mjs.map