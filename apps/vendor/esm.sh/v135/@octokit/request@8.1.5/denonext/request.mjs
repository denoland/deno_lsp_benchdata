/* esm.sh - esbuild bundle(@octokit/request@8.1.5) denonext production */
import{endpoint as p}from"/v135/@octokit/endpoint@9.0.2/denonext/endpoint.mjs";import{getUserAgent as b}from"/v135/universal-user-agent@6.0.1/denonext/universal-user-agent.mjs";var m="8.1.5";import{isPlainObject as y}from"/v135/is-plain-object@5.0.0/denonext/is-plain-object.mjs";import{RequestError as u}from"/v135/@octokit/request-error@5.0.1/denonext/request-error.mjs";function g(e){return e.arrayBuffer()}function d(e){let i=e.request&&e.request.log?e.request.log:console,n=e.request?.parseSuccessResponseBody!==!1;(y(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let a={},r,f,{fetch:s}=globalThis;if(e.request?.fetch&&(s=e.request.fetch),!s)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return s(e.url,{method:e.method,body:e.body,headers:e.headers,signal:e.request?.signal,...e.body&&{duplex:"half"}}).then(async t=>{f=t.url,r=t.status;for(let o of t.headers)a[o[0]]=o[1];if("deprecation"in a){let o=a.link&&a.link.match(/<([^>]+)>; rel="deprecation"/),c=o&&o.pop();i.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${a.sunset}${c?`. See ${c}`:""}`)}if(!(r===204||r===205)){if(e.method==="HEAD"){if(r<400)return;throw new u(t.statusText,r,{response:{url:f,status:r,headers:a,data:void 0},request:e})}if(r===304)throw new u("Not modified",r,{response:{url:f,status:r,headers:a,data:await l(t)},request:e});if(r>=400){let o=await l(t);throw new u(w(o),r,{response:{url:f,status:r,headers:a,data:o},request:e})}return n?await l(t):t.body}}).then(t=>({status:r,url:f,headers:a,data:t})).catch(t=>{if(t instanceof u)throw t;if(t.name==="AbortError")throw t;let o=t.message;throw t.name==="TypeError"&&"cause"in t&&(t.cause instanceof Error?o=t.cause.message:typeof t.cause=="string"&&(o=t.cause)),new u(o,500,{request:e})})}async function l(e){let i=e.headers.get("content-type");return/application\/json/.test(i)?e.json().catch(()=>e.text()).catch(()=>""):!i||/^text\/|charset=utf-8$/.test(i)?e.text():g(e)}function w(e){return typeof e=="string"?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:`Unknown error: ${JSON.stringify(e)}`}function h(e,i){let n=e.defaults(i);return Object.assign(function(r,f){let s=n.merge(r,f);if(!s.request||!s.request.hook)return d(n.parse(s));let t=(o,c)=>d(n.parse(n.merge(o,c)));return Object.assign(t,{endpoint:n,defaults:h.bind(null,n)}),s.request.hook(t,s)},{endpoint:n,defaults:h.bind(null,n)})}var I=h(p,{headers:{"user-agent":`octokit-request.js/${m} ${b()}`}});export{I as request};
//# sourceMappingURL=request.mjs.map