/* esm.sh - esbuild bundle(@octokit/webhooks@12.0.8) denonext production */
var d=r=>({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console),...r});var m=["branch_protection_rule","branch_protection_rule.created","branch_protection_rule.deleted","branch_protection_rule.edited","check_run","check_run.completed","check_run.created","check_run.requested_action","check_run.rerequested","check_suite","check_suite.completed","check_suite.requested","check_suite.rerequested","code_scanning_alert","code_scanning_alert.appeared_in_branch","code_scanning_alert.closed_by_user","code_scanning_alert.created","code_scanning_alert.fixed","code_scanning_alert.reopened","code_scanning_alert.reopened_by_user","commit_comment","commit_comment.created","create","delete","dependabot_alert","dependabot_alert.created","dependabot_alert.dismissed","dependabot_alert.fixed","dependabot_alert.reintroduced","dependabot_alert.reopened","deploy_key","deploy_key.created","deploy_key.deleted","deployment","deployment.created","deployment_protection_rule","deployment_protection_rule.requested","deployment_status","deployment_status.created","discussion","discussion.answered","discussion.category_changed","discussion.created","discussion.deleted","discussion.edited","discussion.labeled","discussion.locked","discussion.pinned","discussion.transferred","discussion.unanswered","discussion.unlabeled","discussion.unlocked","discussion.unpinned","discussion_comment","discussion_comment.created","discussion_comment.deleted","discussion_comment.edited","fork","github_app_authorization","github_app_authorization.revoked","gollum","installation","installation.created","installation.deleted","installation.new_permissions_accepted","installation.suspend","installation.unsuspend","installation_repositories","installation_repositories.added","installation_repositories.removed","installation_target","installation_target.renamed","issue_comment","issue_comment.created","issue_comment.deleted","issue_comment.edited","issues","issues.assigned","issues.closed","issues.deleted","issues.demilestoned","issues.edited","issues.labeled","issues.locked","issues.milestoned","issues.opened","issues.pinned","issues.reopened","issues.transferred","issues.unassigned","issues.unlabeled","issues.unlocked","issues.unpinned","label","label.created","label.deleted","label.edited","marketplace_purchase","marketplace_purchase.cancelled","marketplace_purchase.changed","marketplace_purchase.pending_change","marketplace_purchase.pending_change_cancelled","marketplace_purchase.purchased","member","member.added","member.edited","member.removed","membership","membership.added","membership.removed","merge_group","merge_group.checks_requested","meta","meta.deleted","milestone","milestone.closed","milestone.created","milestone.deleted","milestone.edited","milestone.opened","org_block","org_block.blocked","org_block.unblocked","organization","organization.deleted","organization.member_added","organization.member_invited","organization.member_removed","organization.renamed","package","package.published","package.updated","page_build","ping","project","project.closed","project.created","project.deleted","project.edited","project.reopened","project_card","project_card.converted","project_card.created","project_card.deleted","project_card.edited","project_card.moved","project_column","project_column.created","project_column.deleted","project_column.edited","project_column.moved","projects_v2_item","projects_v2_item.archived","projects_v2_item.converted","projects_v2_item.created","projects_v2_item.deleted","projects_v2_item.edited","projects_v2_item.reordered","projects_v2_item.restored","public","pull_request","pull_request.assigned","pull_request.auto_merge_disabled","pull_request.auto_merge_enabled","pull_request.closed","pull_request.converted_to_draft","pull_request.demilestoned","pull_request.dequeued","pull_request.edited","pull_request.enqueued","pull_request.labeled","pull_request.locked","pull_request.milestoned","pull_request.opened","pull_request.ready_for_review","pull_request.reopened","pull_request.review_request_removed","pull_request.review_requested","pull_request.synchronize","pull_request.unassigned","pull_request.unlabeled","pull_request.unlocked","pull_request_review","pull_request_review.dismissed","pull_request_review.edited","pull_request_review.submitted","pull_request_review_comment","pull_request_review_comment.created","pull_request_review_comment.deleted","pull_request_review_comment.edited","pull_request_review_thread","pull_request_review_thread.resolved","pull_request_review_thread.unresolved","push","registry_package","registry_package.published","registry_package.updated","release","release.created","release.deleted","release.edited","release.prereleased","release.published","release.released","release.unpublished","repository","repository.archived","repository.created","repository.deleted","repository.edited","repository.privatized","repository.publicized","repository.renamed","repository.transferred","repository.unarchived","repository_dispatch","repository_import","repository_vulnerability_alert","repository_vulnerability_alert.create","repository_vulnerability_alert.dismiss","repository_vulnerability_alert.reopen","repository_vulnerability_alert.resolve","secret_scanning_alert","secret_scanning_alert.created","secret_scanning_alert.reopened","secret_scanning_alert.resolved","secret_scanning_alert.revoked","secret_scanning_alert_location","secret_scanning_alert_location.created","security_advisory","security_advisory.performed","security_advisory.published","security_advisory.updated","security_advisory.withdrawn","sponsorship","sponsorship.cancelled","sponsorship.created","sponsorship.edited","sponsorship.pending_cancellation","sponsorship.pending_tier_change","sponsorship.tier_changed","star","star.created","star.deleted","status","team","team.added_to_repository","team.created","team.deleted","team.edited","team.removed_from_repository","team_add","watch","watch.started","workflow_dispatch","workflow_job","workflow_job.completed","workflow_job.in_progress","workflow_job.queued","workflow_job.waiting","workflow_run","workflow_run.completed","workflow_run.in_progress","workflow_run.requested"];function g(r,e,t){r.hooks[e]||(r.hooks[e]=[]),r.hooks[e].push(t)}function h(r,e,t){if(Array.isArray(e)){e.forEach(o=>h(r,o,t));return}if(["*","error"].includes(e)){let o=e==="*"?"any":e,n=`Using the "${e}" event with the regular Webhooks.on() function is not supported. Please use the Webhooks.on${o.charAt(0).toUpperCase()+o.slice(1)}() method instead`;throw new Error(n)}m.includes(e)||r.log.warn(`"${e}" is not a known webhook name (https://developer.github.com/v3/activity/events/types/)`),g(r,e,t)}function w(r,e){g(r,"*",e)}function k(r,e){g(r,"error",e)}import p from"/v135/aggregate-error@3.1.0/denonext/aggregate-error.mjs";function f(r,e){let t;try{t=r(e)}catch(o){console.log('FATAL: Error occurred in "error" event handler'),console.log(o)}t&&t.catch&&t.catch(o=>{console.log('FATAL: Error occurred in "error" event handler'),console.log(o)})}function z(r,e,t){let o=[r.hooks[t],r.hooks["*"]];return e&&o.unshift(r.hooks[`${t}.${e}`]),[].concat(...o.filter(Boolean))}function j(r,e){let t=r.hooks.error||[];if(e instanceof Error){let i=Object.assign(new p([e]),{event:e,errors:[e]});return t.forEach(s=>f(s,i)),Promise.reject(i)}if(!e||!e.name)throw new p(["Event name not passed"]);if(!e.payload)throw new p(["Event payload not passed"]);let o=z(r,"action"in e.payload?e.payload.action:null,e.name);if(o.length===0)return Promise.resolve();let n=[],u=o.map(i=>{let s=Promise.resolve(e);return r.transform&&(s=s.then(r.transform)),s.then(a=>i(a)).catch(a=>n.push(Object.assign(a,{event:e})))});return Promise.all(u).then(()=>{if(n.length===0)return;let i=new p(n);throw Object.assign(i,{event:e,errors:n}),t.forEach(s=>f(s,i)),i})}function y(r,e,t){if(Array.isArray(e)){e.forEach(o=>y(r,o,t));return}if(r.hooks[e]){for(let o=r.hooks[e].length-1;o>=0;o--)if(r.hooks[e][o]===t){r.hooks[e].splice(o,1);return}}}function q(r){let e={hooks:{},log:d(r&&r.log)};return r&&r.transform&&(e.transform=r.transform),{on:h.bind(null,e),onAny:w.bind(null,e),onError:k.bind(null,e),removeListener:y.bind(null,e),receive:j.bind(null,e)}}import{sign as O,verify as M}from"/v135/@octokit/webhooks-methods@4.0.0/denonext/webhooks-methods.mjs";import R from"/v135/aggregate-error@3.1.0/denonext/aggregate-error.mjs";import{verify as P}from"/v135/@octokit/webhooks-methods@4.0.0/denonext/webhooks-methods.mjs";async function E(r,e){if(!await P(r.secret,e.payload,e.signature).catch(()=>!1)){let n=new Error("[@octokit/webhooks] signature does not match event payload and secret");return r.eventHandler.receive(Object.assign(n,{event:e,status:400}))}let o;try{o=JSON.parse(e.payload)}catch(n){throw n.message="Invalid JSON",n.status=400,new R([n])}return r.eventHandler.receive({id:e.id,name:e.name,payload:o})}var U=["x-github-event","x-hub-signature-256","x-github-delivery"];function H(r){return U.filter(e=>!(e in r.headers))}import T from"/v135/aggregate-error@3.1.0/denonext/aggregate-error.mjs";function A(r){return r.body?Promise.resolve(r.body):new Promise((e,t)=>{let o="";r.setEncoding("utf8"),r.on("error",n=>t(new T([n]))),r.on("data",n=>o+=n),r.on("end",()=>e(o))})}function x(r,e){e.writeHead(404,{"content-type":"application/json"}),e.end(JSON.stringify({error:`Unknown route: ${r.method} ${r.url}`}))}async function L(r,e,t,o,n){let u;try{u=new URL(t.url,"http://localhost").pathname}catch{return o.writeHead(422,{"content-type":"application/json"}),o.end(JSON.stringify({error:`Request URL could not be parsed: ${t.url}`})),!0}if(u!==e.path)return n?.(),!1;if(t.method!=="POST")return x(t,o),!0;if(!t.headers["content-type"]||!t.headers["content-type"].startsWith("application/json"))return o.writeHead(415,{"content-type":"application/json",accept:"application/json"}),o.end(JSON.stringify({error:'Unsupported "Content-Type" header value. Must be "application/json"'})),!0;let i=H(t).join(", ");if(i)return o.writeHead(400,{"content-type":"application/json"}),o.end(JSON.stringify({error:`Required headers missing: ${i}`})),!0;let s=t.headers["x-github-event"],a=t.headers["x-hub-signature-256"],v=t.headers["x-github-delivery"];e.log.debug(`${s} event received (id: ${v})`);let _=!1,b=setTimeout(()=>{_=!0,o.statusCode=202,o.end(`still processing
`)},9e3).unref();try{let c=await A(t);return await r.verifyAndReceive({id:v,name:s,payload:c,signature:a}),clearTimeout(b),_||o.end(`ok
`),!0}catch(c){if(clearTimeout(b),_)return!0;let l=Array.from(c)[0],S=l.message?`${l.name}: ${l.message}`:"Error: An Unspecified error occurred";return o.statusCode=typeof l.status<"u"?l.status:500,e.log.error(c),o.end(JSON.stringify({error:S})),!0}}function J(r,{path:e="/api/github/webhooks",log:t=d()}={}){return L.bind(null,r,{path:e,log:t})}var $=class{constructor(e){if(!e||!e.secret)throw new Error("[@octokit/webhooks] options.secret required");let t={eventHandler:q(e),secret:e.secret,hooks:{},log:d(e.log)};this.sign=O.bind(null,e.secret),this.verify=M.bind(null,e.secret),this.on=t.eventHandler.on,this.onAny=t.eventHandler.onAny,this.onError=t.eventHandler.onError,this.removeListener=t.eventHandler.removeListener,this.receive=t.eventHandler.receive,this.verifyAndReceive=E.bind(null,t)}};export{$ as Webhooks,q as createEventHandler,J as createNodeMiddleware,m as emitterEventNames};
//# sourceMappingURL=webhooks.mjs.map