/* esm.sh - esbuild bundle(@octokit/app@14.0.2) denonext production */
import{Octokit as u}from"/v135/@octokit/core@5.0.2/denonext/core.mjs";import{createAppAuth as d}from"/v135/@octokit/auth-app@6.0.1/denonext/auth-app.mjs";import{OAuthApp as f}from"/v135/@octokit/oauth-app@6.0.0/denonext/oauth-app.mjs";import"/v135/@octokit/webhooks@12.0.8/denonext/webhooks.mjs";import"/v135/@octokit/core@5.0.2/denonext/core.mjs";import{createAppAuth as w}from"/v135/@octokit/auth-app@6.0.1/denonext/auth-app.mjs";import{createUnauthenticatedAuth as k}from"/v135/@octokit/auth-unauthenticated@5.0.1/denonext/auth-unauthenticated.mjs";import{Webhooks as y}from"/v135/@octokit/webhooks@12.0.8/denonext/webhooks.mjs";import{composePaginateRest as b}from"/v135/@octokit/plugin-paginate-rest@9.1.4/denonext/plugin-paginate-rest.mjs";import"/v135/@octokit/core@5.0.2/denonext/core.mjs";import{createAppAuth as g}from"/v135/@octokit/auth-app@6.0.1/denonext/auth-app.mjs";import"/v135/@octokit/core@5.0.2/denonext/core.mjs";import{composePaginateRest as A}from"/v135/@octokit/plugin-paginate-rest@9.1.4/denonext/plugin-paginate-rest.mjs";import"/v135/@octokit/core@5.0.2/denonext/core.mjs";import{createNodeMiddleware as j,sendNodeResponse as N,unknownRouteResponse as P}from"/v135/@octokit/oauth-app@6.0.0/denonext/oauth-app.mjs";import{createNodeMiddleware as W}from"/v135/@octokit/webhooks@12.0.8/denonext/webhooks.mjs";var p="14.0.2";function m(t,a){return new y({secret:a.secret,transform:async o=>{if(!("installation"in o.payload)||typeof o.payload.installation!="object"){let r=new t.constructor({authStrategy:k,auth:{reason:'"installation" key missing in webhook event payload'}});return{...o,octokit:r}}let e=o.payload.installation.id,i=await t.auth({type:"installation",installationId:e,factory(r){return new r.octokit.constructor({...r.octokitOptions,authStrategy:w,auth:{...r,installationId:e}})}});return i.hook.before("request",r=>{r.headers["x-github-delivery"]=o.id}),{...o,octokit:i}}})}async function c(t,a){return t.octokit.auth({type:"installation",installationId:a,factory(o){let e={...o.octokitOptions,authStrategy:g,auth:{...o,installationId:a}};return new o.octokit.constructor(e)}})}function O(t){return Object.assign(I.bind(null,t),{iterator:l.bind(null,t)})}async function I(t,a){let o=l(t)[Symbol.asyncIterator](),e=await o.next();for(;!e.done;)await a(e.value),e=await o.next()}function l(t){return{async*[Symbol.asyncIterator](){let a=b.iterator(t.octokit,"GET /app/installations");for await(let{data:o}of a)for(let e of o)yield{octokit:await c(t,e.id),installation:e}}}}function S(t){return Object.assign(R.bind(null,t),{iterator:h.bind(null,t)})}async function R(t,a,o){let e=h(t,o?a:void 0)[Symbol.asyncIterator](),i=await e.next();for(;!i.done;)o?await o(i.value):await a(i.value),i=await e.next()}function x(t,a){return{async*[Symbol.asyncIterator](){yield{octokit:await t.getInstallationOctokit(a)}}}}function h(t,a){return{async*[Symbol.asyncIterator](){let o=a?x(t,a.installationId):t.eachInstallation.iterator();for await(let{octokit:e}of o){let i=A.iterator(e,"GET /installation/repositories");for await(let{data:r}of i)for(let n of r)yield{octokit:e,repository:n}}}}}function s(){}function q(t,a={}){let o=Object.assign({debug:s,info:s,warn:console.warn.bind(console),error:console.error.bind(console)},a.log),e={pathPrefix:"/api/github",...a,log:o},i=W(t.webhooks,{path:e.pathPrefix+"/webhooks",log:o}),r=j(t.oauth,{pathPrefix:e.pathPrefix+"/oauth"});return M.bind(null,e.pathPrefix,i,r)}async function M(t,a,o,e,i,r){let{pathname:n}=new URL(e.url,"http://localhost");return n.startsWith(`${t}/`)?(n===`${t}/webhooks`?a(e,i):n.startsWith(`${t}/oauth/`)?o(e,i):N(P(e),i),!0):(r?.(),!1)}var tt=class{static{this.VERSION=p}static defaults(t){return class extends this{constructor(...o){super({...t,...o[0]})}}}constructor(t){let a=t.Octokit||u,o=Object.assign({appId:t.appId,privateKey:t.privateKey},t.oauth?{clientId:t.oauth.clientId,clientSecret:t.oauth.clientSecret}:{});this.octokit=new a({authStrategy:d,auth:o,log:t.log}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},t.log),t.webhooks?this.webhooks=m(this.octokit,t.webhooks):Object.defineProperty(this,"webhooks",{get(){throw new Error("[@octokit/app] webhooks option not set")}}),t.oauth?this.oauth=new f({...t.oauth,clientType:"github-app",Octokit:a}):Object.defineProperty(this,"oauth",{get(){throw new Error("[@octokit/app] oauth.clientId / oauth.clientSecret options are not set")}}),this.getInstallationOctokit=c.bind(null,this),this.eachInstallation=O(this),this.eachRepository=S(this)}};export{tt as App,q as createNodeMiddleware};
//# sourceMappingURL=app.mjs.map