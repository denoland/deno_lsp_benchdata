/* esm.sh - esbuild bundle(@octokit/plugin-paginate-graphql@4.0.0) denonext production */
import"/v135/@octokit/core@5.0.2/denonext/core.mjs";var w=(t,r)=>`The cursor at "${t.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,u=class extends Error{constructor(r,e){super(w(r.pathInQuery,e)),this.pageInfo=r,this.cursorValue=e,this.name="MissingCursorChangeError",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},g=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`),this.response=r,this.name="MissingPageInfo",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}};var b=t=>Object.prototype.toString.call(t)==="[object Object]";function p(t){let r=l(t,"pageInfo");if(r.length===0)throw new g(t);return r}var l=(t,r,e=[])=>{for(let o of Object.keys(t)){let n=[...e,o],a=t[o];if(a.hasOwnProperty(r))return n;if(b(a)){let s=l(a,r,n);if(s.length>0)return s}}return[]},c=(t,r)=>r.reduce((e,o)=>e[o],t),f=(t,r,e)=>{let o=r[r.length-1],n=[...r].slice(0,-1),a=c(t,n);typeof e=="function"?a[o]=e(a[o]):a[o]=e};var P=t=>{let r=p(t);return{pathInQuery:r,pageInfo:c(t,[...r,"pageInfo"])}};import"/v135/@octokit/core@5.0.2/denonext/core.mjs";var d=t=>t.hasOwnProperty("hasNextPage"),y=t=>d(t)?t.endCursor:t.startCursor,x=t=>d(t)?t.hasNextPage:t.hasPreviousPage;var h=t=>(r,e={})=>{let o=!0,n={...e};return{[Symbol.asyncIterator]:()=>({async next(){if(!o)return{done:!0,value:{}};let a=await t.graphql(r,n),s=P(a),i=y(s.pageInfo);if(o=x(s.pageInfo),o&&i===n.cursor)throw new u(s,i);return n={...n,cursor:i},{done:!1,value:a}}})}};import"/v135/@octokit/core@5.0.2/denonext/core.mjs";var I=(t,r)=>{if(Object.keys(t).length===0)return Object.assign(t,r);let e=p(t),o=[...e,"nodes"],n=c(r,o);n&&f(t,o,m=>[...m,...n]);let a=[...e,"edges"],s=c(r,a);s&&f(t,a,m=>[...m,...s]);let i=[...e,"pageInfo"];return f(t,i,c(r,i)),t};var O=t=>{let r=h(t);return async(e,o={})=>{let n={};for await(let a of r(e,o))n=I(n,a);return n}};function U(t){return t.graphql,{graphql:Object.assign(t.graphql,{paginate:Object.assign(O(t),{iterator:h(t)})})}}export{U as paginateGraphql};
//# sourceMappingURL=plugin-paginate-graphql.mjs.map