/* esm.sh - esbuild bundle(minizlib@2.1.2) denonext production */
import * as __0$ from "node:assert";
import * as __1$ from "node:buffer";
import * as __2$ from "node:zlib";
import * as __3$ from "/v135/minipass@3.3.6/denonext/minipass.mjs";
import * as __4$ from "node:zlib";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"assert":return e(__0$);case"buffer":return e(__1$);case"zlib":return e(__2$);case"minipass":return e(__3$);default:throw new Error("module \""+n+"\" not found");}};
var $=Object.create;var S=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var __=Object.getOwnPropertyNames;var R_=Object.getPrototypeOf,s_=Object.prototype.hasOwnProperty;var h=(R=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(R,{get:(_,s)=>(typeof require<"u"?require:_)[s]}):R)(function(R){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+R+'" is not supported')});var X=(R,_)=>()=>(_||R((_={exports:{}}).exports,_),_.exports),E_=(R,_)=>{for(var s in _)S(R,s,{get:_[s],enumerable:!0})},C=(R,_,s,t)=>{if(_&&typeof _=="object"||typeof _=="function")for(let O of __(_))!s_.call(R,O)&&O!==s&&S(R,O,{get:()=>_[O],enumerable:!(t=k(_,O))||t.enumerable});return R},o=(R,_,s)=>(C(R,_,"default"),s&&C(s,_,"default")),z=(R,_,s)=>(s=R!=null?$(R_(R)):{},C(_||!R||!R.__esModule?S(s,"default",{value:R,enumerable:!0}):s,R));var Y=X((B_,K)=>{var t_=h("zlib").constants||{ZLIB_VERNUM:4736};K.exports=Object.freeze(Object.assign(Object.create(null),{Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_VERSION_ERROR:-6,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,DEFLATE:1,INFLATE:2,GZIP:3,GUNZIP:4,DEFLATERAW:5,INFLATERAW:6,UNZIP:7,BROTLI_DECODE:8,BROTLI_ENCODE:9,Z_MIN_WINDOWBITS:8,Z_MAX_WINDOWBITS:15,Z_DEFAULT_WINDOWBITS:15,Z_MIN_CHUNK:64,Z_MAX_CHUNK:1/0,Z_DEFAULT_CHUNK:16384,Z_MIN_MEMLEVEL:1,Z_MAX_MEMLEVEL:9,Z_DEFAULT_MEMLEVEL:8,Z_MIN_LEVEL:-1,Z_MAX_LEVEL:9,Z_DEFAULT_LEVEL:-1,BROTLI_OPERATION_PROCESS:0,BROTLI_OPERATION_FLUSH:1,BROTLI_OPERATION_FINISH:2,BROTLI_OPERATION_EMIT_METADATA:3,BROTLI_MODE_GENERIC:0,BROTLI_MODE_TEXT:1,BROTLI_MODE_FONT:2,BROTLI_DEFAULT_MODE:0,BROTLI_MIN_QUALITY:0,BROTLI_MAX_QUALITY:11,BROTLI_DEFAULT_QUALITY:11,BROTLI_MIN_WINDOW_BITS:10,BROTLI_MAX_WINDOW_BITS:24,BROTLI_LARGE_MAX_WINDOW_BITS:30,BROTLI_DEFAULT_WINDOW:22,BROTLI_MIN_INPUT_BLOCK_BITS:16,BROTLI_MAX_INPUT_BLOCK_BITS:24,BROTLI_PARAM_MODE:0,BROTLI_PARAM_QUALITY:1,BROTLI_PARAM_LGWIN:2,BROTLI_PARAM_LGBLOCK:3,BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING:4,BROTLI_PARAM_SIZE_HINT:5,BROTLI_PARAM_LARGE_WINDOW:6,BROTLI_PARAM_NPOSTFIX:7,BROTLI_PARAM_NDIRECT:8,BROTLI_DECODER_RESULT_ERROR:0,BROTLI_DECODER_RESULT_SUCCESS:1,BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT:2,BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION:0,BROTLI_DECODER_PARAM_LARGE_WINDOW:1,BROTLI_DECODER_NO_ERROR:0,BROTLI_DECODER_SUCCESS:1,BROTLI_DECODER_NEEDS_MORE_INPUT:2,BROTLI_DECODER_NEEDS_MORE_OUTPUT:3,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE:-1,BROTLI_DECODER_ERROR_FORMAT_RESERVED:-2,BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE:-3,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET:-4,BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME:-5,BROTLI_DECODER_ERROR_FORMAT_CL_SPACE:-6,BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE:-7,BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT:-8,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1:-9,BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2:-10,BROTLI_DECODER_ERROR_FORMAT_TRANSFORM:-11,BROTLI_DECODER_ERROR_FORMAT_DICTIONARY:-12,BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS:-13,BROTLI_DECODER_ERROR_FORMAT_PADDING_1:-14,BROTLI_DECODER_ERROR_FORMAT_PADDING_2:-15,BROTLI_DECODER_ERROR_FORMAT_DISTANCE:-16,BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET:-19,BROTLI_DECODER_ERROR_INVALID_ARGUMENTS:-20,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES:-21,BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS:-22,BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP:-25,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1:-26,BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2:-27,BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES:-30,BROTLI_DECODER_ERROR_UNREACHABLE:-31},t_))});var x=X(e=>{"use strict";var P=h("assert"),I=h("buffer").Buffer,q=h("zlib"),L=e.constants=Y(),e_=h("minipass"),V=I.concat,l=Symbol("_superWrite"),A=class extends Error{constructor(_){super("zlib: "+_.message),this.code=_.code,this.errno=_.errno,this.code||(this.code="ZLIB_ERROR"),this.message="zlib: "+_.message,Error.captureStackTrace(this,this.constructor)}get name(){return"ZlibError"}},O_=Symbol("opts"),c=Symbol("flushFlag"),j=Symbol("finishFlushFlag"),g=Symbol("fullFlushFlag"),E=Symbol("handle"),u=Symbol("onError"),D=Symbol("sawError"),F=Symbol("level"),M=Symbol("strategy"),U=Symbol("ended"),u_=Symbol("_defaultFullFlush"),N=class extends e_{constructor(_,s){if(!_||typeof _!="object")throw new TypeError("invalid options for ZlibBase constructor");super(_),this[D]=!1,this[U]=!1,this[O_]=_,this[c]=_.flush,this[j]=_.finishFlush;try{this[E]=new q[s](_)}catch(t){throw new A(t)}this[u]=t=>{this[D]||(this[D]=!0,this.close(),this.emit("error",t))},this[E].on("error",t=>this[u](new A(t))),this.once("end",()=>this.close)}close(){this[E]&&(this[E].close(),this[E]=null,this.emit("close"))}reset(){if(!this[D])return P(this[E],"zlib binding closed"),this[E].reset()}flush(_){this.ended||(typeof _!="number"&&(_=this[g]),this.write(Object.assign(I.alloc(0),{[c]:_})))}end(_,s,t){return _&&this.write(_,s),this.flush(this[j]),this[U]=!0,super.end(null,null,t)}get ended(){return this[U]}write(_,s,t){if(typeof s=="function"&&(t=s,s="utf8"),typeof _=="string"&&(_=I.from(_,s)),this[D])return;P(this[E],"zlib binding closed");let O=this[E]._handle,f=O.close;O.close=()=>{};let J=this[E].close;this[E].close=()=>{},I.concat=r=>r;let T;try{let r=typeof _[c]=="number"?_[c]:this[c];T=this[E]._processChunk(_,r),I.concat=V}catch(r){I.concat=V,this[u](new A(r))}finally{this[E]&&(this[E]._handle=O,O.close=f,this[E].close=J,this[E].removeAllListeners("error"))}this[E]&&this[E].on("error",r=>this[u](new A(r)));let B;if(T)if(Array.isArray(T)&&T.length>0){B=this[l](I.from(T[0]));for(let r=1;r<T.length;r++)B=this[l](T[r])}else B=this[l](I.from(T));return t&&t(),B}[l](_){return super.write(_)}},i=class extends N{constructor(_,s){_=_||{},_.flush=_.flush||L.Z_NO_FLUSH,_.finishFlush=_.finishFlush||L.Z_FINISH,super(_,s),this[g]=L.Z_FULL_FLUSH,this[F]=_.level,this[M]=_.strategy}params(_,s){if(!this[D]){if(!this[E])throw new Error("cannot switch params when binding is closed");if(!this[E].params)throw new Error("not supported in this implementation");if(this[F]!==_||this[M]!==s){this.flush(L.Z_SYNC_FLUSH),P(this[E],"zlib binding closed");let t=this[E].flush;this[E].flush=(O,f)=>{this.flush(O),f()};try{this[E].params(_,s)}finally{this[E].flush=t}this[E]&&(this[F]=_,this[M]=s)}}}},Z=class extends i{constructor(_){super(_,"Deflate")}},m=class extends i{constructor(_){super(_,"Inflate")}},d=Symbol("_portable"),p=class extends i{constructor(_){super(_,"Gzip"),this[d]=_&&!!_.portable}[l](_){return this[d]?(this[d]=!1,_[9]=255,super[l](_)):super[l](_)}},b=class extends i{constructor(_){super(_,"Gunzip")}},y=class extends i{constructor(_){super(_,"DeflateRaw")}},w=class extends i{constructor(_){super(_,"InflateRaw")}},H=class extends i{constructor(_){super(_,"Unzip")}},a=class extends N{constructor(_,s){_=_||{},_.flush=_.flush||L.BROTLI_OPERATION_PROCESS,_.finishFlush=_.finishFlush||L.BROTLI_OPERATION_FINISH,super(_,s),this[g]=L.BROTLI_OPERATION_FLUSH}},W=class extends a{constructor(_){super(_,"BrotliCompress")}},G=class extends a{constructor(_){super(_,"BrotliDecompress")}};e.Deflate=Z;e.Inflate=m;e.Gzip=p;e.Gunzip=b;e.DeflateRaw=y;e.InflateRaw=w;e.Unzip=H;typeof q.BrotliCompress=="function"?(e.BrotliCompress=W,e.BrotliDecompress=G):e.BrotliCompress=e.BrotliDecompress=class{constructor(){throw new Error("Brotli is not supported in this version of Node.js")}}});var n={};E_(n,{BrotliCompress:()=>l_,BrotliDecompress:()=>D_,Deflate:()=>r_,DeflateRaw:()=>n_,Gunzip:()=>I_,Gzip:()=>T_,Inflate:()=>i_,InflateRaw:()=>o_,Unzip:()=>L_,default:()=>h_});var Q=z(x());o(n,z(x()));var{Deflate:r_,Inflate:i_,Gzip:T_,Gunzip:I_,DeflateRaw:n_,InflateRaw:o_,Unzip:L_,BrotliCompress:l_,BrotliDecompress:D_}=Q,{default:v,...A_}=Q,h_=v!==void 0?v:A_;export{l_ as BrotliCompress,D_ as BrotliDecompress,r_ as Deflate,n_ as DeflateRaw,I_ as Gunzip,T_ as Gzip,i_ as Inflate,o_ as InflateRaw,L_ as Unzip,h_ as default};
//# sourceMappingURL=minizlib.mjs.map